name: Deploy to Heroku (Docker)

on:
  push:
    branches:
      - main  # Adjust this if you want to deploy from a different branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Check out your repository so that the workflow can access your code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to the Heroku Container Registry using your secrets
      - name: Log in to Heroku Container Registry
        run: echo "$HEROKU_API_KEY" | docker login --username="$HEROKU_EMAIL" --password-stdin registry.heroku.com
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}

      # Build the Docker image using your Dockerfile.
      - name: Build Docker image
        run: docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .

      # Push the Docker image to Heroku
      - name: Push Docker image to Heroku
        run: docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      # Install the Heroku CLI (this is the new step)
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      # Release the image on Heroku
      - name: Release to Heroku
        run: heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}

      # (Optional) Check the deployment status by pinging the health endpoint
      - name: Check Health
        run: |
          sleep 10
          curl -f https://$HEROKU_APP_NAME.herokuapp.com/health
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
